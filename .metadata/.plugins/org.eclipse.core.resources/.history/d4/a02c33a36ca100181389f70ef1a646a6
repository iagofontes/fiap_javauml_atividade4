package Exercicio2;

import java.time.LocalDateTime;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class Aeroporto {

	private String nome;
	private static boolean pistaLiberada;
	
	public Aeroporto(String nome) {
		this.nome = nome;
		this.pistaLiberada = true;
	}
	
	public boolean aguardarPistaDisponivel() {
		return false;
	}
	
	public void alterarEstadoPista() {
		this.pistaLiberada = !this.pistaLiberada;
		notifyAll();
	}
	
	private void iniciarChecagemPista() {
		Runnable runEstadoPista = ()->{
			try {
				while(true) {
					TimeUnit.SECONDS.sleep(2);
					Aeroporto.pistaLiberada = !Aeroporto.pistaLiberada;
					System.out.println(Aeroporto.pistaLiberada);
				}
			} catch (Exception e) {
				e.printStackTrace();
				System.out.println(e.getMessage());
			}
		};
		
		ExecutorService executorService = Executors.newFixedThreadPool(1);
		executorService.submit(runEstadoPista);
	}
	
	
}
